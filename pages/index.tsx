import { GetStaticProps } from "next";
import Head from "next/head";

import Pagination from "@/components/Pagination/Pagination";
import { SinglePost } from "@/components/Post/SinglePost";
import Tag from "@/components/Tag/Tag";
import { getAllTags, getNumberOfPages, getPostsByPage, getPostsForTopPage } from "@/lib/notionAPI";

export const getStaticProps: GetStaticProps = async () => {
    const displayPosts = await getPostsForTopPage(4);
    const allTags = await getAllTags();
    const numberOfPage = await getNumberOfPages();

    return {
        props: {
            displayPosts,
            allTags,
            numberOfPage,
        },
        revalidate: 60 * 60 * 6,
    };
};

interface Post {
    id: string;
    title: string;
    description: string;
    date: string;
    tags: string[];
    slug: string;
}

export default function Home({
    displayPosts,
    allTags,
    numberOfPage,
}: {
    displayPosts: Post[];
    allTags: string[];
    numberOfPage: number;
}) {
    return (
        <div className="container h-full w-full mx-auto">
            <Head>
                <title>Errorda2</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container w-full mt-16">
                <h1 className="text-5x1 font-medium text-center mb-16">Output-list</h1>
                <section className="sm:grid grid-cols-1 gap-3 mx-auto">
                    {displayPosts.map(
                        (post: {
                            id: string;
                            title: string;
                            description: string;
                            date: string;
                            tags: string[];
                            slug: string;
                        }) => (
                            <div className="mx-4" key={post.id}>
                                <SinglePost
                                    title={post.title}
                                    description={post.description}
                                    date={post.date}
                                    tags={post.tags}
                                    slug={post.slug}
                                    isPaginationPage={false}
                                />
                            </div>
                        ),
                    )}
                </section>
                <Pagination numberOfPage={numberOfPage} tag="" />
                <Tag tags={allTags} />
            </main>
        </div>
    );
}
