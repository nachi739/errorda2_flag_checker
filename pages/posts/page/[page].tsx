import { getAllPosts, getNumberOfPages, getPostsByPage, getPostsForTopPage } from "@/lib/notionAPI";
import localFont from "next/font/local";
import Image from "next/image";
import Head from "next/head";
import { SinglePost } from "@/components/Post/SinglePost";
import { GetStaticPaths, GetStaticProps } from "next";
import Pagination from "@/components/Pagination/Pagination";

export const getStaticPaths: GetStaticPaths = async () => {
    const numberOfPage = await getNumberOfPages();

    let params = [];
    for (let i = 1; i <= numberOfPage; i++) {
        params.push({ params: { page: i.toString() } });
    }
    return {
        paths: params,
        fallback: "blocking",
    };
};

export const getStaticProps: GetStaticProps = async (context) => {
    const currentPage = context.params?.page;
    if (!currentPage) {
        return {
            notFound: true,
        };
    }
    const postsByPage = await getPostsByPage(parseInt(currentPage.toString(), 10));
    const numberOfPage = await getNumberOfPages();

    return {
        props: {
            postsByPage,
            numberOfPage,
        },
        revalidate: 60 * 60 * 6,
    };
};

interface Post {
    id: string;
    title: string;
    description: string;
    date: string;
    tags: string[];
    slug: string;
}

interface PageListProps {
    postsByPage: Post[];
    numberOfPage: number;
}

const PageList = ({ postsByPage, numberOfPage }: PageListProps) => {
    return (
        <div className="container h-full w-full mx-auto">
            <Head>
                <title>Errorda2</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container w-full mt-16">
                <h1 className="text-5x1 font-medium text-center mb-16">Errorda2</h1>
                <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
                    {postsByPage.map((post: Post) => (
                        <div key={post.id}>
                            <SinglePost
                                title={post.title}
                                description={post.description}
                                date={post.date}
                                tags={post.tags}
                                slug={post.slug}
                                isPaginationPage={true}
                            />
                        </div>
                    ))}
                </section>
                <Pagination numberOfPage={numberOfPage} />
            </main>
        </div>
    );
};

export default PageList;
