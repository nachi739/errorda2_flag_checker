/* Tag検索で表示されるページ */

import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";

import Pagination from "@/components/Pagination/Pagination";
import { SinglePost } from "@/components/Post/SinglePost";
import Tag from "@/components/Tag/Tag";
import { getAllTags, getNumberOfPagesByTag, getPostsByTagAndPage } from "@/lib/notionAPI";

export const getStaticPaths: GetStaticPaths = async () => {
    const allTags = await getAllTags();
    const params: { params: { tag: string; page: string } }[] = [];

    await Promise.all(
        allTags.map((tag: string) => {
            return getNumberOfPagesByTag(tag).then((numberOfPagesByTag: number) => {
                for (let i = 1; i <= numberOfPagesByTag; i++) {
                    params.push({ params: { tag: tag, page: i.toString() } });
                }
            });
        }),
    );

    return {
        paths: params,
        fallback: "blocking",
    };
};

export const getStaticProps: GetStaticProps = async (context) => {
    const currentPage: string = context.params?.page?.toString() || "";
    const currentTag: string = context.params?.tag?.toString() || "";

    const upperCaseCurrentTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

    const posts = await getPostsByTagAndPage(upperCaseCurrentTag, parseInt(currentPage, 10));

    const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);
    const allTags = await getAllTags();

    return {
        props: {
            posts,
            numberOfPagesByTag,
            currentTag,
            allTags,
        },
        revalidate: 60 * 60 * 6,
    };
};

interface Post {
    id: string;
    title: string;
    description: string;
    date: string;
    tags: string[];
    slug: string;
}

interface PageListProps {
    posts: Post[];
    numberOfPage: number;
    numberOfPagesByTag: number;
    currentTag: string;
    allTags: string[];
}

const TagPageList = ({ numberOfPagesByTag, posts, currentTag, allTags }: PageListProps) => {
    return (
        <div className="container h-full w-full mx-auto">
            <Head>
                <title>Errorda2</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container w-full mt-16">
                <h1 className="text-5x1 font-medium text-center mb-16">Output-list</h1>
                <p className="py-1.5 px-2 rounded-full mb-16 w-1/2 bg-black text-white text-center mx-auto">
                    {currentTag}
                </p>
                <section className="grid grid-cols-1 md:w-1/2 sm:grid-cols-1 gap-3 mx-auto ">
                    <section className="sm:grid grid-cols-1 gap-3 mx-auto"></section>
                    {posts.map((post: Post) => (
                        <div key={post.id} className="mx-4">
                            <SinglePost
                                title={post.title}
                                description={post.description}
                                date={post.date}
                                tags={post.tags}
                                slug={post.slug}
                                isPaginationPage={true}
                            />
                        </div>
                    ))}
                </section>
                <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag} />
                <Tag tags={allTags} />
            </main>
        </div>
    );
};

export default TagPageList;
